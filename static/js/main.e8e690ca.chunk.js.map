{"version":3,"sources":["components/GoogleMap.tsx","components/Map.tsx","components/OnlineIndicator.tsx","components/OnlineDetector.tsx","hooks/useDeviceOrientation.ts","components/Orientation.tsx","components/QrCodeScanner.tsx","components/Todo/AddTodo.tsx","components/Todo/TodoItem.tsx","components/Todo/TodoList.tsx","App.tsx","serviceWorkerRegistration.ts","index.tsx"],"names":["googleMapsApiKey","process","libraries","GoogleMap","lat","lon","isLoaded","useJsApiLoader","useEffect","mapContainerStyle","width","height","zoom","center","lng","onLoad","map","maps","window","google","location","LatLng","places","PlacesService","nearbySearch","rankBy","RankBy","DISTANCE","type","results","place","Marker","geometry","placeId","place_id","title","name","label","setMap","Map","useState","err","setErr","setLat","setLon","handleClick","useCallback","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","message","handleClose","style","color","onClick","OnlineIndicator","styled","div","isOnline","OnlineDetector","online","useNetworkState","useDeviceOrientation","x","setX","y","setY","z","setZ","handleOrientationChange","event","beta","gamma","alpha","DeviceOrientationEvent","requestPermission","Promise","resolve","getPermissionsPromise","then","state","addEventListener","removeEventListener","Orientation","QrCodeScanner","isRecording","setIsRecording","decoded","setDecoded","ref","useRef","scanner","handleStart","current","start","catch","handleStop","stop","qr","QrScanner","result","destroy","display","readOnly","value","AddTodo","onAddItem","nameRef","descriptionRef","handleAdd","description","TodoItem","item","index","onChangeItem","onRemoveItem","setName","setDescription","handleBlur","onBlur","onChange","target","LS_KEY","fromLocalStorage","JSON","parse","localStorage","getItem","stringify","TodoList","list","setList","setItem","toLocalStorage","addItem","currentList","itemWithKey","key","Date","now","removeItem","filter","updateItem","newItem","Object","assign","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.e8e690ca.chunk.js","sourcesContent":["import {\n  useJsApiLoader,\n  GoogleMap as GoogleMapComponent,\n  LoadScriptProps,\n} from \"@react-google-maps/api\";\n\nimport { useEffect } from \"react\";\n\ntype Props = {\n  lat: number;\n  lon: number;\n};\n\nconst googleMapsApiKey = process.env.REACT_APP_API_KEY ?? \"\";\nconst libraries: LoadScriptProps[\"libraries\"] = [\"places\"];\n\nexport function GoogleMap({ lat, lon }: Props) {\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey,\n    libraries,\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n    }\n  }, [isLoaded]);\n\n  if (!isLoaded) {\n    return <>Loading...</>;\n  }\n\n  return (\n    <GoogleMapComponent\n      mapContainerStyle={{\n        width: \"500px\",\n        height: \"500px\",\n      }}\n      zoom={10}\n      center={{ lat, lng: lon }}\n      onLoad={(map) => {\n        const maps = window.google.maps;\n        const location = new maps.LatLng(lat, lon);\n        const service = new maps.places.PlacesService(map);\n\n        service.nearbySearch(\n          {\n            location,\n            rankBy: maps.places.RankBy.DISTANCE,\n            type: \"tourist_attraction\",\n          },\n          (results) => {\n            const [place] = results;\n\n            const marker = new maps.Marker({\n              place: {\n                location: place.geometry?.location,\n                placeId: place.place_id,\n              },\n              title: place.name,\n              label: place.name,\n            });\n\n            marker.setMap(map);\n          }\n        );\n      }}\n    />\n  );\n}\n","import { useCallback, useState } from \"react\";\nimport { GoogleMap } from \"./GoogleMap\";\n\nexport function Map() {\n  const [err, setErr] = useState<string | null>(null);\n  const [lat, setLat] = useState<number | null>(null);\n  const [lon, setLon] = useState<number | null>(null);\n\n  const handleClick = useCallback(() => {\n    navigator.geolocation.getCurrentPosition(\n      (position) => {\n        const { latitude, longitude } = position.coords;\n        setLat(latitude);\n        setLon(longitude);\n      },\n      (error) => setErr(error.message)\n    );\n  }, []);\n\n  const handleClose = useCallback(() => {\n    setLat(null);\n    setLon(null);\n  }, []);\n\n  if (err) {\n    return <span style={{ color: \"red\" }}>{err}</span>;\n  }\n\n  if (lat && lon) {\n    return (\n      <>\n        <button onClick={handleClose}>Close map</button>\n        <hr />\n        <GoogleMap lat={lat} lon={lon} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <button onClick={handleClick} type=\"button\">\n        Find point of interest\n      </button>\n    </>\n  );\n}\n","import styled from \"styled-components\";\n\ntype Props = {\n  isOnline: boolean;\n};\n\nexport const OnlineIndicator = styled.div<Props>`\n  width: 10px;\n  height: 10px;\n  border-radius: 10px;\n  background-color: ${({ isOnline }) => (isOnline ? \"green\" : \"red\")};\n`;\n","import { useNetworkState } from \"react-use\";\nimport { OnlineIndicator } from \"./OnlineIndicator\";\n\nexport function OnlineDetector() {\n  const { online } = useNetworkState();\n\n  return <OnlineIndicator isOnline={online ?? false} />;\n}\n","import { useEffect, useState } from \"react\";\n\nfunction getPermissionsPromise(): Promise<PermissionState> {\n  if (!(\"DeviceOrientationEvent\" in window)) {\n    return Promise.resolve(\"denied\");\n  }\n\n  return (\n    DeviceOrientationEvent.requestPermission?.() ?? Promise.resolve(\"granted\")\n  );\n}\n\nexport function useDeviceOrientation() {\n  const [x, setX] = useState<number | null>(90);\n  const [y, setY] = useState<number | null>(0);\n  const [z, setZ] = useState<number | null>(0);\n\n  useEffect(() => {\n    const handleOrientationChange = (event: DeviceOrientationEvent) => {\n      setX(event.beta);\n      setY(event.gamma);\n      setZ(event.alpha);\n    };\n\n    getPermissionsPromise().then((state) => {\n      if (state !== \"granted\") {\n        return;\n      }\n\n      window.addEventListener(\n        \"deviceorientation\",\n        handleOrientationChange,\n        true\n      );\n    });\n\n    return () => {\n      window.removeEventListener(\n        \"deviceorientation\",\n        handleOrientationChange,\n        true\n      );\n    };\n  }, []);\n\n  return { x, y, z };\n}\n","import { useDeviceOrientation } from \"../hooks/useDeviceOrientation\";\n\nexport function Orientation() {\n  const { x, y, z } = useDeviceOrientation();\n\n  return (\n    <div>\n      <p>\n        Your device angle X: <strong>{x}</strong>&deg;\n      </p>\n      <p>\n        Your device angle Y: <strong>{y}</strong>&deg;\n      </p>\n      <p>\n        Your device angle Z: <strong>{z}</strong>&deg;\n      </p>\n    </div>\n  );\n}\n","import QrScanner from \"qr-scanner\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport function QrCodeScanner() {\n  const [isRecording, setIsRecording] = useState(false);\n  const [decoded, setDecoded] = useState<string | null>(null);\n  const ref = useRef<HTMLVideoElement | null>(null);\n  const scanner = useRef<QrScanner | null>(null);\n\n  const handleStart = useCallback(() => {\n    scanner\n      .current!.start()\n      .then(() => {\n        setIsRecording(true);\n        setDecoded(null);\n      })\n      .catch(() => setIsRecording(false));\n  }, []);\n\n  const handleStop = useCallback(() => {\n    scanner.current!.stop();\n    setIsRecording(false);\n  }, []);\n\n  useEffect(() => {\n    if (ref.current === null) {\n      return () => {};\n    }\n\n    const qr = new QrScanner(ref.current, (result) => {\n      setDecoded(result);\n      handleStop();\n    });\n\n    scanner.current = qr;\n\n    return () => scanner.current?.destroy();\n  }, [handleStop]);\n\n  return (\n    <div>\n      <p>\n        <button onClick={handleStart}>Start recording</button>\n        <button onClick={handleStop}>Stop recording</button>\n      </p>\n      <video\n        width={isRecording ? 400 : 0}\n        height={isRecording ? 300 : 0}\n        ref={ref}\n      ></video>\n      {decoded && (\n        <p>\n          <strong>Decoded string</strong>\n          <textarea style={{ display: \"block\" }} readOnly value={decoded} />\n          <button onClick={() => setDecoded(null)}>Clear</button>\n        </p>\n      )}\n    </div>\n  );\n}\n","import { useCallback, useRef } from \"react\";\nimport type { Item } from \"./TodoItem\";\n\nexport type AddItem = (item: Item) => void;\n\ntype Props = {\n  onAddItem: AddItem;\n};\n\nexport function AddTodo({ onAddItem }: Props) {\n  const nameRef = useRef<HTMLInputElement | null>(null);\n  const descriptionRef = useRef<HTMLTextAreaElement | null>(null);\n\n  const handleAdd = useCallback(() => {\n    const name = nameRef.current!.value;\n    const description = descriptionRef.current!.value;\n\n    nameRef.current!.value = \"\";\n    descriptionRef.current!.value = \"\";\n\n    return onAddItem({ name, description });\n  }, [onAddItem]);\n\n  return (\n    <div>\n      <input ref={nameRef} type=\"text\" name=\"name\" />\n      <hr />\n      <textarea name=\"description\" ref={descriptionRef} />\n      <hr />\n      <button onClick={handleAdd}>Add todo</button>\n    </div>\n  );\n}\n","import { useCallback, useState } from \"react\";\n\nexport type Item = {\n  name: string;\n  description: string;\n};\n\nexport type RemoveItem = (index: number) => void;\nexport type ChangeItem = (index: number, item: Item) => void;\n\ntype Props = {\n  index: number;\n  item: Item;\n  onRemoveItem: RemoveItem;\n  onChangeItem: ChangeItem;\n};\n\nexport function TodoItem({ item, index, onChangeItem, onRemoveItem }: Props) {\n  const [name, setName] = useState(item.name);\n  const [description, setDescription] = useState(item.description);\n  const handleBlur = useCallback(\n    () => onChangeItem(index, { name, description }),\n    [index, name, description, onChangeItem]\n  );\n\n  return (\n    <li>\n      <button onClick={() => onRemoveItem(index)} onBlur={handleBlur}>\n        Remove\n      </button>{\" \"}\n      <input\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n        onBlur={handleBlur}\n      />\n      <hr />\n      <textarea\n        value={description}\n        onChange={(event) => setDescription(event.target.value)}\n      />\n    </li>\n  );\n}\n","import { useCallback, useEffect, useState } from \"react\";\nimport { AddItem, AddTodo } from \"./AddTodo\";\nimport { Item, RemoveItem, ChangeItem, TodoItem } from \"./TodoItem\";\n\nconst LS_KEY = \"todo_list_pwa\";\n\ntype ItemWithKey = Item & { key: number };\n\ntype ItemList = ItemWithKey[];\n\nfunction toLocalStorage(list: ItemList) {\n  localStorage.setItem(LS_KEY, JSON.stringify(list));\n}\n\nfunction fromLocalStorage(): ItemList {\n  return JSON.parse(localStorage.getItem(LS_KEY) ?? JSON.stringify([]));\n}\n\nexport function TodoList() {\n  const [list, setList] = useState(fromLocalStorage);\n\n  useEffect(() => {\n    toLocalStorage(list);\n  }, [list]);\n\n  const addItem: AddItem = useCallback((item) => {\n    setList((currentList) => {\n      const itemWithKey: ItemWithKey = {\n        ...item,\n        key: Date.now(),\n      };\n      return [...currentList, itemWithKey];\n    });\n  }, []);\n\n  const removeItem: RemoveItem = useCallback((index) => {\n    setList((currentList) =>\n      currentList.filter((item) => item !== currentList[index])\n    );\n  }, []);\n\n  const updateItem: ChangeItem = useCallback((index, newItem) => {\n    setList((currentList) => {\n      const item = currentList[index];\n\n      return Object.assign([], currentList, {\n        [index]: { ...item, ...newItem },\n      });\n    });\n  }, []);\n\n  return (\n    <>\n      <ol>\n        {list.map((item, index) => (\n          <TodoItem\n            onChangeItem={updateItem}\n            onRemoveItem={removeItem}\n            index={index}\n            item={item}\n            key={item.key}\n          />\n        ))}\n      </ol>\n\n      <AddTodo onAddItem={addItem} />\n    </>\n  );\n}\n","import {\n  OnlineDetector,\n  Map,\n  Orientation,\n  QrCodeScanner,\n  TodoList,\n} from \"./components\";\n\nfunction App() {\n  return (\n    <>\n      <OnlineDetector />\n      <hr />\n      <TodoList />\n      <hr />\n      <Orientation />\n      <hr />\n      <Map />\n      <hr />\n      <QrCodeScanner />\n      <hr />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (\"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}